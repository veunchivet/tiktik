# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\NM\Desktop\veunchivetmmo\tools-download.ui3.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtCore, QtGui, QtWidgets
import threading
import time
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5. QtWidgets import QFileDialog
import os
from tkinter import Tk


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        x = 901
        y = 576
        Form.setFixedSize(x,y)
        Form.resize(901, 576)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Icon/download.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Form.setWindowIcon(icon)

        self.widget = QtWidgets.QWidget(Form)
        self.widget.setGeometry(QtCore.QRect(-10, -10, 941, 601))
        self.widget.setStyleSheet("background-color: rgb(255, 0, 255);")
        self.widget.setObjectName("widget")
        self.Start_btn = QtWidgets.QPushButton(self.widget)
        self.Start_btn.setGeometry(QtCore.QRect(570, 450, 151, 51))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.Start_btn.setFont(font)
        self.Start_btn.setStyleSheet("background-color: rgb(0, 255, 0);")
        self.Start_btn.setObjectName("Start_btn")
        self.Stop_btn = QtWidgets.QPushButton(self.widget)
        self.Stop_btn.setGeometry(QtCore.QRect(370, 450, 151, 51))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.Stop_btn.setFont(font)
        self.Stop_btn.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(255, 0, 0);")
        self.Stop_btn.setObjectName("Stop_btn")
        self.groupBox = QtWidgets.QGroupBox(self.widget)
        self.groupBox.setGeometry(QtCore.QRect(30, 230, 191, 101))
        self.groupBox.setStyleSheet("color: rgb(255, 255, 255);")
        self.groupBox.setObjectName("groupBox")
        self.frame = QtWidgets.QFrame(self.groupBox)
        self.frame.setGeometry(QtCore.QRect(10, 30, 101, 31))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.Video_radioButton = QtWidgets.QRadioButton(self.frame)
        self.Video_radioButton.setGeometry(QtCore.QRect(10, -11, 161, 41))
        self.Video_radioButton.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 12pt \"Segoe UI\";\n"
"color: rgb(255, 255, 0);")
        self.Video_radioButton.setObjectName("Video_radioButton")
        self.Audio_radioButton = QtWidgets.QRadioButton(self.groupBox)
        self.Audio_radioButton.setGeometry(QtCore.QRect(20, 60, 161, 31))
        self.Audio_radioButton.setStyleSheet("color: rgb(255, 255, 0);\n"
"font: 12pt \"Segoe UI\";\n"
"\n"
"")
        self.Audio_radioButton.setObjectName("Audio_radioButton")
        self.groupBox_2 = QtWidgets.QGroupBox(self.widget)
        self.groupBox_2.setGeometry(QtCore.QRect(30, 450, 191, 81))
        font = QtGui.QFont()
        font.setBold(True)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.groupBox_2.setObjectName("groupBox_2")
        self.video_size_comboBox = QtWidgets.QComboBox(self.groupBox_2)
        self.video_size_comboBox.setGeometry(QtCore.QRect(20, 20, 131, 51))
        self.video_size_comboBox.setMinimumSize(QtCore.QSize(131, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        self.video_size_comboBox.setFont(font)
        self.video_size_comboBox.setStyleSheet("font: 12pt \"Segoe UI\";\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);")
        self.video_size_comboBox.setObjectName("video_size_comboBox")
        self.video_size_comboBox.addItem("")
        self.video_size_comboBox.addItem("")
        self.groupBox_3 = QtWidgets.QGroupBox(self.widget)
        self.groupBox_3.setGeometry(QtCore.QRect(30, 30, 191, 191))
        font = QtGui.QFont()
        font.setBold(True)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.groupBox_3.setObjectName("groupBox_3")
        self.frame_2 = QtWidgets.QFrame(self.groupBox_3)
        self.frame_2.setGeometry(QtCore.QRect(10, 30, 111, 151))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.tiktok_radioButton = QtWidgets.QRadioButton(self.frame_2)
        self.tiktok_radioButton.setGeometry(QtCore.QRect(10, 0, 151, 20))
        self.tiktok_radioButton.setStyleSheet("color: rgb(0, 0, 0);")
        self.tiktok_radioButton.setObjectName("tiktok_radioButton")
        self.Douyin_radioButton_2 = QtWidgets.QRadioButton(self.frame_2)
        self.Douyin_radioButton_2.setGeometry(QtCore.QRect(10, 30, 151, 20))
        self.Douyin_radioButton_2.setStyleSheet("color: rgb(0, 0, 0);")
        self.Douyin_radioButton_2.setObjectName("Douyin_radioButton_2")
        self.Facebook_radioButton = QtWidgets.QRadioButton(self.frame_2)
        self.Facebook_radioButton.setGeometry(QtCore.QRect(10, 60, 161, 20))
        self.Facebook_radioButton.setStyleSheet("color: rgb(0, 0, 0);")
        self.Facebook_radioButton.setObjectName("Facebook_radioButton")
        self.Youtube_radioButton = QtWidgets.QRadioButton(self.frame_2)
        self.Youtube_radioButton.setGeometry(QtCore.QRect(10, 90, 161, 20))
        self.Youtube_radioButton.setStyleSheet("color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);")
        self.Youtube_radioButton.setObjectName("Youtube_radioButton")
        self.Douyin_radioButton = QtWidgets.QRadioButton(self.frame_2)
        self.Douyin_radioButton.setGeometry(QtCore.QRect(10, 120, 151, 20))
        self.Douyin_radioButton.setStyleSheet("color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);")
        self.Douyin_radioButton.setObjectName("Douyin_radioButton")
        self.Linkinput_textEdit = QtWidgets.QTextEdit(self.widget)
        self.Linkinput_textEdit.setGeometry(QtCore.QRect(230, 220, 491, 181))
        self.Linkinput_textEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Linkinput_textEdit.setObjectName("Linkinput_textEdit")
        self.groupBox_4 = QtWidgets.QGroupBox(self.widget)
        self.groupBox_4.setGeometry(QtCore.QRect(30, 340, 191, 101))
        font = QtGui.QFont()
        font.setBold(True)
        self.groupBox_4.setFont(font)
        self.groupBox_4.setStyleSheet("color: rgb(255, 255, 255);")
        self.groupBox_4.setObjectName("groupBox_4")
        self.video_type_comboBox = QtWidgets.QComboBox(self.groupBox_4)
        self.video_type_comboBox.setGeometry(QtCore.QRect(20, 30, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        self.video_type_comboBox.setFont(font)
        self.video_type_comboBox.setStyleSheet("font: 12pt \"Segoe UI\";\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);")
        self.video_type_comboBox.setObjectName("video_type_comboBox")
        self.video_type_comboBox.addItem("")
        self.video_type_comboBox.addItem("")
        self.Url_input_lineEdit = QtWidgets.QLineEdit(self.widget)
        self.Url_input_lineEdit.setGeometry(QtCore.QRect(370, 40, 351, 41))
        font = QtGui.QFont()
        font.setBold(True)
        self.Url_input_lineEdit.setFont(font)
        self.Url_input_lineEdit.setStyleSheet("   \n"
"background-color: rgb(255, 255, 255);")
        self.Url_input_lineEdit.setObjectName("Url_input_lineEdit")
        self.paste_Start_btn = QtWidgets.QPushButton(self.widget)
        self.paste_Start_btn.setGeometry(QtCore.QRect(740, 40, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.paste_Start_btn.setFont(font)
        self.paste_Start_btn.setStyleSheet("background-color: rgb(0, 255, 0);")
        self.paste_Start_btn.setObjectName("paste_Start_btn")
        self.Browse_Start_btn = QtWidgets.QPushButton(self.widget)
        self.Browse_Start_btn.setGeometry(QtCore.QRect(230, 40, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.Browse_Start_btn.setFont(font)
        self.Browse_Start_btn.setStyleSheet("background-color: rgb(0, 255, 0);")
        self.Browse_Start_btn.setObjectName("Browse_Start_btn")
        self.get_souce_lineEdit = QtWidgets.QLineEdit(self.widget)
        self.get_souce_lineEdit.setGeometry(QtCore.QRect(230, 160, 491, 41))
        font = QtGui.QFont()
        font.setBold(True)
        self.get_souce_lineEdit.setFont(font)
        self.get_souce_lineEdit.setStyleSheet("  \n"
"background-color: rgb(255, 255, 255);")
        self.get_souce_lineEdit.setObjectName("get_souce_lineEdit")
        self.get_source_Start_btn = QtWidgets.QPushButton(self.widget)
        self.get_source_Start_btn.setGeometry(QtCore.QRect(740, 160, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.get_source_Start_btn.setFont(font)
        self.get_source_Start_btn.setStyleSheet("background-color: rgb(0, 255, 0);")
        self.get_source_Start_btn.setObjectName("get_source_Start_btn")
        self.folder_name_lineEdit = QtWidgets.QLineEdit(self.widget)
        self.folder_name_lineEdit.setGeometry(QtCore.QRect(230, 100, 141, 41))
        font = QtGui.QFont()
        font.setBold(True)
        self.folder_name_lineEdit.setFont(font)
        self.folder_name_lineEdit.setStyleSheet("    \n"
"background-color: rgb(0, 255, 0);")
        self.folder_name_lineEdit.setObjectName("folder_name_lineEdit")
        self.save_to_lineEdit = QtWidgets.QLineEdit(self.widget)
        self.save_to_lineEdit.setGeometry(QtCore.QRect(390, 100, 331, 41))
        font = QtGui.QFont()
        font.setBold(True)
        self.save_to_lineEdit.setFont(font)
        self.save_to_lineEdit.setStyleSheet("   \n"
"background-color: rgb(255, 255, 255);")
        self.save_to_lineEdit.setObjectName("save_to_lineEdit")
        self.save_to_Start_btn = QtWidgets.QPushButton(self.widget)
        self.save_to_Start_btn.setGeometry(QtCore.QRect(740, 100, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.save_to_Start_btn.setFont(font)
        self.save_to_Start_btn.setStyleSheet("background-color: rgb(0, 255, 0);")
        self.save_to_Start_btn.setObjectName("save_to_Start_btn")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "VEUNCHIVET  ToolDownload"))
        self.Start_btn.setText(_translate("Form", "START"))
        self.Stop_btn.setText(_translate("Form", "STOP"))
        self.groupBox.setTitle(_translate("Form", "Download type"))
        self.Video_radioButton.setText(_translate("Form", "Video"))
        self.Audio_radioButton.setText(_translate("Form", "Audio"))
        self.groupBox_2.setTitle(_translate("Form", "Video size"))
        self.video_size_comboBox.setItemText(0, _translate("Form", "1080"))
        self.video_size_comboBox.setItemText(1, _translate("Form", "720"))
        self.groupBox_3.setTitle(_translate("Form", "Option Download"))
        self.tiktok_radioButton.setText(_translate("Form", "TikTok"))
        self.Douyin_radioButton_2.setText(_translate("Form", "Instagram"))
        self.Facebook_radioButton.setText(_translate("Form", "Facebook"))
        self.Youtube_radioButton.setText(_translate("Form", "Youtube"))
        self.Douyin_radioButton.setText(_translate("Form", "Douyin"))
        self.groupBox_4.setTitle(_translate("Form", "Video type"))
        self.video_type_comboBox.setItemText(0, _translate("Form", "mp4"))
        self.video_type_comboBox.setItemText(1, _translate("Form", "mp3"))
        self.Url_input_lineEdit.setPlaceholderText(_translate("Form", "Paste URL here..........."))
        self.paste_Start_btn.setText(_translate("Form", "Paste"))
        self.Browse_Start_btn.setText(_translate("Form", "Browse"))
        self.get_souce_lineEdit.setPlaceholderText(_translate("Form", "Browse Text source......"))
        self.get_source_Start_btn.setText(_translate("Form", "Get-Source"))
        self.folder_name_lineEdit.setPlaceholderText(_translate("Form", "Folder name......"))
        self.save_to_lineEdit.setPlaceholderText(_translate("Form", "Save to ......."))
        self.save_to_Start_btn.setText(_translate("Form", "Save to"))




        self.Browse_Start_btn.clicked.connect(self.BrowseFile)
        self.paste_Start_btn.clicked.connect(self.Patse)
        self.save_to_Start_btn.clicked.connect(self.SaveTo)
        self.get_source_Start_btn.clicked.connect(self.Get_Cookies)
        self.Start_btn.clicked.connect(self.Start)


    def BrowseFile(self):
        print("Browse\n")   
        self.Url_input_lineEdit.setText("")
        self.Linkinput_textEdit.setText("")                
        Counter = 0
        FileTxt = QFileDialog.getOpenFileName(None, 'Datei offnen', '', 'Textdateien (*.txt)')
        FileTxt = os.path.abspath(FileTxt[0])
        ReadTxt = ''.join(open(FileTxt, encoding= "UTF-8").readlines())
        data = ''.join(open(FileTxt, encoding= "UTF-8").read())
        Readlist = ReadTxt.split("\n")
        for i in Readlist:
            if i:
                Counter +=1
        print(Counter)        
        print(data) 
        self.Url_input_lineEdit.setText(FileTxt)
        self.Linkinput_textEdit.setText(data)  



    def Patse(self):
        self.Linkinput_textEdit.setText("")
        try:
            Paste = Tk()
            Copy = Paste.clipboard_get()
            Paste.destroy()
            RemoveSpace = str(Copy).replace(" ", "")
            if self.tiktok_radioButton.isChecked():
                self.Linkinput_textEdit.setText(RemoveSpace)
            if self.Facebook_radioButton.isChecked():
                self.Linkinput_textEdit.setText(RemoveSpace)                
            if self.Youtube_radioButton.isChecked():
                self.Linkinput_textEdit.setText(RemoveSpace)    
            if self.Douyin_radioButton.isChecked():
                self.Url_input_lineEdit.setText(RemoveSpace)    
            if self.Douyin_radioButton_2.isChecked():
                self.Url_input_lineEdit.setText(RemoveSpace)
            if self.Audio_radioButton.isChecked():
                self.Linkinput_textEdit.setText(RemoveSpace)                                             
        except PermissionError:
            print("")

            
    def SaveTo(self):
        print("Save File\n")  
        self.save_to_lineEdit.setText("")
        Save = QFileDialog.getExistingDirectory()
        self.save_to_lineEdit.setText(Save)


    def Get_Cookies(self):
        print("Get Cookies\n")  
        self.get_souce_lineEdit.setText("")
        Save = QFileDialog.getOpenFileName(None, 'Datei offnen', '', 'Textdateien (*.txt)')
        Save = os.path.abspath(Save[0])
        Save1 = ''.join(open(Save, encoding= "UTF-8").readlines())
        self.get_souce_lineEdit.setText(Save)

    def Start(self):
        run = threading.Thread(target=self.Main_Start)
        run.start()
    def Main_Start(self):
        print("Run")  
        Main_Url = self.Url_input_lineEdit.text() 
        Make_Folder = self.folder_name_lineEdit.text()
        Save_to = self.save_to_lineEdit.text()
        GetCookies = self.get_souce_lineEdit.text()
        LinkDY = str(Main_Url)
        Video_Size = self.video_size_comboBox.currentText()
        Video_Type = self.video_type_comboBox.currentText() 
        if self.Video_radioButton.isChecked():
           print("Video")
            ############## Download TikTok ############################################################           
        if self.tiktok_radioButton.isChecked():
                print("TikTok")
                Link = self.Linkinput_textEdit.toPlainText()
                Fomart = f"System\\yt-dlp.exe -o {Save_to}\{Make_Folder}\%(title)s-%(id)s.%(ext)s -f 'bestvideo[height={Video_Size}]+bestaudio[ext=m4a]/best --merge-output-format {Video_Type} "
                Split_Url = str(Link).split()
                for ReadLink in Split_Url:
                    Download = Fomart + ReadLink
                    os.system(Download)

         ############## Download Facebook ############################################################
        if self.Facebook_radioButton.isChecked():
                print("TikTok")
                Link = self.Linkinput_textEdit.toPlainText()
                Fomart = f"System\\yt-dlp.exe -o {Save_to}\{Make_Folder}\%(title)s-%(id)s.%(ext)s -f 'bestvideo[height={Video_Size}]+bestaudio[ext=m4a]/best --merge-output-format {Video_Type} "
                Split_Url = str(Link).split()
                for ReadLink in Split_Url:
                    Download = Fomart + ReadLink
                    os.system(Download)
                # self.name_label.setText("Download Complet")   
                # self.name_label.update()
                # time.sleep(5)  
                # self.name_label.setText("Python Basic Session 2")   
                # self.name_label.update()                    
            ############## Download YouTUbe ############################################################
        if self.Youtube_radioButton.isChecked():
                print("TikTok")
                Link = self.Linkinput_textEdit.toPlainText()
                Fomart = f"System\\yt-dlp.exe -o {Save_to}\{Make_Folder}\%(title)s-%(id)s.%(ext)s -f 'bestvideo[height={Video_Size}]+bestaudio[ext=m4a]/best --merge-output-format {Video_Type} "
                Split_Url = str(Link).split()
                for ReadLink in Split_Url:
                    Download = Fomart + ReadLink
                    os.system(Download)
                # self.name_label.setText("Download Complet")   
                # self.name_label.update()
                # time.sleep(5)  
                # self.name_label.setText("Python Basic Session 2")   
                # self.name_label.update()                      
            #########################Douyin########################################
        if self.Douyin_radioButton.isChecked():
                print("Douyin")
                self.name_label.setText("Start Downloading..........")   
                self.name_label.update()               
                with open(LinkDY, 'r', encoding="UTF-8") as Link_txt:
                    Counter = 0
                    while (LinkDouyin := Link_txt.readline().rstrip()):
                        Counter += 1
                        print(LinkDouyin)
                        Fomart = f"System\\yt-dlp.exe --cookies={GetCookies} -o {Save_to}\{Make_Folder}\%(title)s-%(id)s.%(ext)s -f 'bestvideo[height={Video_Size}]+bestaudio[ext=m4a]/best --merge-output-format {Video_Type} {LinkDouyin} "
                        DownloadDY = Fomart
                        os.system(DownloadDY)                       
                #     self.name_label.setText("Download Complet")   
                #     self.name_label.update()
                #     time.sleep(5)  
                #     self.name_label.setText("Python Basic Session 2")   
                #     self.name_label.update()                         
            ######################################IG###############################
        if self.Douyin_radioButton_2.isChecked():
                print("Douyin")
                with open(LinkDY, 'r', encoding="UTF-8") as Link_txt:
                    while (LinkDouyin := Link_txt.readline().rstrip()):
                        print(LinkDouyin)
                        Fomart = f"System\\yt-dlp.exe --cookies={GetCookies} -o {Save_to}\{Make_Folder}\%(title)s-%(id)s.%(ext)s -f 'bestvideo[height={Video_Size}]+bestaudio[ext=m4a]/best --merge-output-format {Video_Type} {LinkDouyin} "
                        DownloadDY = Fomart
                        os.system(DownloadDY)
                #     self.name_label.setText("Download Complet")   
                #     self.name_label.update()
                #     time.sleep(5)  
                #     self.name_label.setText("Python Basic Session 2")   
                #     self.name_label.update()          

        if self.Audio_radioButton.isChecked():
            print("Audio")
            Link = self.Linkinput_textEdit.toPlainText()
            Fomart = f"System\\yt-dlp.exe -o {Save_to}\{Make_Folder}\%(title)s-%(id)s.%(ext)s -f bestaudio --extract-audio --audio-format mp3 --audio-quality 128 "
            Split_Url = str(Link).split()
            for ReadLink in Split_Url:
                Download = Fomart + ReadLink
                os.system(Download)
        #     self.name_label.setText("Download Complet")   
        #     self.name_label.update()
        #     time.sleep(5)  
        #     self.name_label.setText("Python Basic Session 2")   
        #     self.name_label.update()  

            #FomartADO = f"System\\yt-dlp.exe -o {Save_to}\{Make_Folder}\%(title)s-%(id)s.%(ext)s -f bestaudio --extract-audio --audio-format mp3 --audio-quality 128 "








if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
